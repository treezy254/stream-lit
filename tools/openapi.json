openapi: "3.1.0"
info:
  title: "LiteLLM API"
  description: "Proxy Server to call 100+ LLMs in the OpenAI format"
  version: "0.1.0"
paths:
  /models:
    get:
      summary: "Model List"
      operationId: "model_list_models_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /v1/models:
    get:
      summary: "Model List"
      operationId: "model_list_v1_models_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /engines/{model}/completions:
    post:
      tags:
        - "completions"
      summary: "Completion"
      operationId: "completion_engines__model__completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "path"
          required: true
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /completions:
    post:
      tags:
        - "completions"
      summary: "Completion"
      operationId: "completion_completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "query"
          required: false
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /v1/completions:
    post:
      tags:
        - "completions"
      summary: "Completion"
      operationId: "completion_v1_completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "query"
          required: false
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /openai/deployments/{model}/chat/completions:
    post:
      tags:
        - "chat/completions"
      summary: "Chat Completion"
      operationId: "chat_completion_openai_deployments__model__chat_completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "path"
          required: true
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /chat/completions:
    post:
      tags:
        - "chat/completions"
      summary: "Chat Completion"
      operationId: "chat_completion_chat_completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "query"
          required: false
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /v1/chat/completions:
    post:
      tags:
        - "chat/completions"
      summary: "Chat Completion"
      operationId: "chat_completion_v1_chat_completions_post"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "model"
          in: "query"
          required: false
          schema:
            anyOf:
              - {}
              - {}
          title: "Model"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
  /embeddings:
    post:
      tags:
        - "embeddings"
      summary: "Embeddings"
      operationId: "embeddings_embeddings_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /v1/embeddings:
    post:
      tags:
        - "embeddings"
      summary: "Embeddings"
      operationId: "embeddings_v1_embeddings_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /images/generations:
    post:
      tags:
        - "image generation"
      summary: "Image Generation"
      operationId: "image_generation_images_generations_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /v1/images/generations:
    post:
      tags:
        - "image generation"
      summary: "Image Generation"
      operationId: "image_generation_v1_images_generations_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /key/generate:
    post:
      tags:
        - "key management"
      summary: "Generate Key Fn"
      description: >
        Generate an API key based on the provided data.
        Docs: https://docs.litellm.ai/docs/proxy/virtual_keys
        Parameters:
        - duration: Optional[str] - Specify the length of time the token is valid for. You can set duration as seconds ("30s"), minutes ("30m"), hours ("30h"), days ("30d"). (Default is set to 1 hour.)
        - models: Optional[list] - Model_name's a user is allowed to call. (if empty, key is allowed to call all models)
        - aliases: Optional[dict] - Any alias mappings, on top of anything in the config.yaml model list. - https://docs.litellm.ai/docs/proxy/virtual_keys#managing-auth---upgradedowngrade-model-ids UPLOAD API Model maps to ALIAS Mapping
        - quotas: Optional[dict] - A dictionary of the following format: {"requests": X, "completions": Y}. (if empty, key is allowed to call all)
      operationId: "key_key_generate_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /key/extension:
    post:
      tags:
        - "key management"
      summary: "Extend Key"
      description: "Extend the expiration of a key by the given extension duration. Cannot extend past the key's original expiration."
      operationId: "key_key_extension_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /key/expiration:
    get:
      tags:
        - "key management"
      summary: "Get Key Expiration"
      description: "Get the expiration timestamp for the given key."
      operationId: "key_key_expiration_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /key/revoke:
    post:
      tags:
        - "key management"
      summary: "Revoke Key"
      description: "Revoke a key and permanently disable it. This action cannot be undone."
      operationId: "key_key_revoke_post"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
        '422':
          description: "Validation Error"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /key/usage:
    get:
      tags:
        - "key management"
      summary: "Get Key Usage"
      description: "Get the usage information for the given key."
      operationId: "key_key_usage_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /deployments:
    get:
      tags:
        - "deployments"
      summary: "Get Deployments"
      description: "Get a list of all deployments that are currently active or have been active within the last 30 days."
      operationId: "deployments_deployments_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /v1/deployments:
    get:
      tags:
        - "deployments"
      summary: "Get Deployments"
      description: "Get a list of all deployments that are currently active or have been active within the last 30 days."
      operationId: "deployments_v1_deployments_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /openai/deployments:
    get:
      tags:
        - "deployments"
      summary: "Get Deployments"
      description: "Get a list of all deployments that are currently active or have been active within the last 30 days."
      operationId: "deployments_openai_deployments_get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
  /v1/deployments/{model}:
    get:
      tags:
        - "deployments"
      summary: "Get Deployment"
      description: "Get a specific deployment's details."
      operationId: "deployments_v1_deployments__model__get"
      responses:
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema: {}
      security:
        - APIKeyHeader: []
components:
  securitySchemes:
    APIKeyHeader:
      type: "apiKey"
      in: "header"
      name: "X-Api-Key"
